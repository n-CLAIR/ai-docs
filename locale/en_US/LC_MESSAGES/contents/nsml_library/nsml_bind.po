# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, NAVER
# This file is distributed under the same license as the NSML package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
msgid ""
msgstr ""
"Project-Id-Version: NSML \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-08-01 09:39+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../contents/nsml_library/nsml_bind.rst:4
msgid "nsml.bind"
msgstr ""

#: ../../contents/nsml_library/nsml_bind.rst:7
msgid "NSML에서 사용할 save와 load, infer함수를 바인드해줍니다."
msgstr "It binds functions that are used internally in NSML."

#: ../../contents/nsml_library/nsml_bind.rst
msgid "매개변수"
msgstr "Parameters"

#: ../../contents/nsml_library/nsml_bind.rst:9
msgid "모델을 저장하는 :ref:`save 함수<nsml.bind-save>` 입니다."
msgstr ":ref:`save function<nsml.bind-save>` to save the model."

#: ../../contents/nsml_library/nsml_bind.rst:12
msgid "저장된 모델을 불러오는 :ref:`load 함수<nsml.bind-load>` 입니다."
msgstr ":ref:`load function<nsml.bind-load>` loads a saved model."

#: ../../contents/nsml_library/nsml_bind.rst:15
#: ../../contents/nsml_library/nsml_bind.rst:42
#: ../../contents/nsml_library/nsml_bind.rst:67
msgid "Example ::"
msgstr ""

#: ../../contents/nsml_library/nsml_bind.rst:30
msgid "nsml.bind-save"
msgstr ""

#: ../../contents/nsml_library/nsml_bind.rst:32
msgid ""
":ref:`nsml.bind()<nsml.bind()>` 에 넘겨지는 save 함수는 model, optimizer 등 python"
" object를 저장하는 함수입니다."
msgstr ""
":ref:`nsml.bind()<nsml.bind()>` passed to nsml.bind() is a function that "
"stores python objects such as models and optimizers."

#: ../../contents/nsml_library/nsml_bind.rst:34
msgid "다음과 같이 첫번째 인자로 저장할 수 있는 경로를 받고, 유저는 입력받은 경로에 하나 이상의 파일을 저장합니다."
msgstr "User saves one or more files in the input dir_path."

#: ../../contents/nsml_library/nsml_bind.rst:36
msgid ""
"이미 생성된 session을 재현하는 :ref:`nsml fork<nsml fork>` , :ref:`nsml submit<nsml"
" submit>` 등의 명령어는 save 함수를 통해 저장된 파일을 load해서 사용합니다."
msgstr ""
":ref:`nsml fork<nsml fork>` , :ref:`nsml infer<nsml infer>` , :ref:`nsml "
"submit<nsml submit>` commands that use an already created session use "
"objects saved through save function."

#: ../../contents/nsml_library/nsml_bind.rst
msgid "param str dir_path"
msgstr ""

#: ../../contents/nsml_library/nsml_bind.rst:38
msgid "저장할 위치가 폴더 경로입니다."
msgstr "The folder path to the location to save."

#: ../../contents/nsml_library/nsml_bind.rst:40
msgid "파일로 바로 저장하는 예제입니다."
msgstr "An example of saving directly to a file."

#: ../../contents/nsml_library/nsml_bind.rst:55
msgid "nsml.bind-load"
msgstr ""

#: ../../contents/nsml_library/nsml_bind.rst:57
msgid "저장된 모델을 불러오는 load 함수를 binding 합니다."
msgstr "Bind the load function that load the saved model."

#: ../../contents/nsml_library/nsml_bind.rst:59
msgid "load 함수는 첫번째 인자로 반드시 폴더명을 변수로 받아야 합니다."
msgstr "load function should receive first argument as saved directory path."

#: ../../contents/nsml_library/nsml_bind.rst:61
msgid ""
":ref:`nsml fork<nsml fork>`, :ref:`nsml submit<nsml submit>` 등의 모델을 불러오는 "
"명령어에서 load 함수를 호출합니다."
msgstr ""
"It calls load function on a command that loads a model such as :ref:`nsml"
" fork<nsml fork>` , :ref:`nsml infer<nsml infer>` , :ref:`nsml "
"submit<nsml submit>`."

#: ../../contents/nsml_library/nsml_bind.rst:63
msgid "저장된 폴더의 경로입니다."
msgstr "The path to the saved folder."

#: ../../contents/nsml_library/nsml_bind.rst:65
msgid ":ref:`bind-save<nsml.bind-save>` 에서 1개의 파일만 저장했을 때 불러오는 예제입니다."
msgstr ""
"This is an example to load when only one file is saved in :ref:`bind-"
"save<nsml.bind-save>` ."

#~ msgid "NSML에서 내부적으로 사용하는 함수 또는 변수들을 하나로 묶어주는 함수입니다."
#~ msgstr "It binds functions or variables that are used internally in NSML."

#~ msgid "매개 변수"
#~ msgstr "Parameters"

#~ msgid "inference 방법이 담긴 :ref:`infer 함수<nsml.bind-infer>` 입니다."
#~ msgstr ":ref:`infer function<nsml.bind-infer>` contains the inference method."

#~ msgid "다음과 같이 첫번째 인자로 저장할 수 있는 디렉토리 경로를 받고,"
#~ msgstr "It gets a path that can be saved as the first argument, "

#~ msgid "load 함수는 첫번째 인자로 save된 파일들이 저장된 directory 위치를 받습니다."
#~ msgstr "load function receive first argument as saved directory path"

#~ msgid "nsml.bind-infer"
#~ msgstr ""

#~ msgid "save로 저장된 모델을 load로 불러오고 실제 inference를 진행하는 방법이 정의된 함수를 binding 합니다."
#~ msgstr ""
#~ "It binds a function that defines a"
#~ " way to load a saved model into"
#~ " a load and proceed with the "
#~ "actual inference."

#~ msgid "param str input"
#~ msgstr ""

#~ msgid "inference 데이터 가 인수로 들어옵니다."
#~ msgstr "The inference data comes in as arguments."

#~ msgid ""
#~ "이 함수는 :ref:`nsml submit<nsml submit>` 과"
#~ " :ref:`nsml exec <nsml exec>` 에 따라"
#~ " 받는 인수가 다릅니다."
#~ msgstr ""
#~ "This function needs different arguments "
#~ "depends on :ref:`nsml submit<nsml submit>` "
#~ "and :ref:`nsml exec <nsml exec>`."

#~ msgid ":ref:`nsml submit<nsml submit>`"
#~ msgstr ":ref:`nsml submit<nsml submit>`"

#~ msgid ""
#~ ":ref:`data_loader.py<data_loader.py>` 에 정의된 return"
#~ " 값이 infer 함수의 첫번째 인수로 입력됩니다."
#~ msgstr ""
#~ "The return value defined in "
#~ ":ref:`data_loader.py<data_loader.py>` is entered as"
#~ " the first argument to the infer "
#~ "function."

#~ msgid ":ref:`nsml exec <nsml exec>`"
#~ msgstr ""

#~ msgid "app_type에 따라서 첫번째 인자를 받는 input 의 형식이 다릅니다."
#~ msgstr ""
#~ "Depending on the app_type, the format"
#~ " of the input on the first "
#~ "argument is different."

#~ msgid "app_type은 :ref:`nsml exec <nsml exec>` 할 때 정의합니다."
#~ msgstr "app_type is defined when executing :ref:`nsml exec <nsml exec>` ."

#~ msgid "app_type:"
#~ msgstr ""

#~ msgid "default(None): app_type을 정하지 않고 exec 을 사용하면,"
#~ msgstr "default (None): If you use exec without specifying app_type,"

#~ msgid ""
#~ "``[base64.b64decode(input_data.split('base64,')[1])]`` 와 "
#~ "같이 decode 를 한 후 input 에 데이터가"
#~ " 입력됩니다."
#~ msgstr ""
#~ "Like ``[base64.b64decode(input_data.split('base64,')[1])]``, "
#~ "after decode, data is input to "
#~ "input as shown in Fig."

#~ msgid "list_string: app_type을 정하고 exec 을 사용하면,"
#~ msgstr "list_string: If you specify an app_type and use exec,"

#~ msgid "``{'data': [[input_data]]}`` 와 같이 input 에 데이터가 입력됩니다."
#~ msgstr ""
#~ "Like ``{'data': [[input_data]]}``, data is "
#~ "input to input as shown in Fig."

