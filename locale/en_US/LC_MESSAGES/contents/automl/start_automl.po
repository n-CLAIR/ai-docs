# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, NAVER
# This file is distributed under the same license as the NSML package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
msgid ""
msgstr ""
"Project-Id-Version: NSML \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-06 09:33+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../contents/automl/start_automl.rst:4
msgid "Starting AutoML"
msgstr ""

#: ../../contents/automl/start_automl.rst:6
msgid ""
"AutoML을 실행하는 방법은 매우 간단합니다. AutoML을 시작하기 위해선 일반적인 NSML session을 돌릴 때와 비교하여"
" configuration file이 추가적으로 필요합니다. AutoML을 사용하는 방법을 이해하기 위해 `nsml-"
"examples`_ 중에서 `06.AutoML/01_automl_mnist`_ 를 활용해보겠습니다."
msgstr ""
"Running AutoML is very simple. In order to start AutoML, an additional "
"configuration file is needed as compared to running a normal NSML "
"session. Let's take advantage of `06.AutoML/01_automl_mnist`_ in `nsml-"
"examples`_ to understand how to use AutoML."

#: ../../contents/automl/start_automl.rst:14
msgid "Prepare configuration file"
msgstr ""

#: ../../contents/automl/start_automl.rst:16
msgid ""
"mnist 예제를 비롯한 모든 예제에서는 configuration file이 ``config.json`` 또는 "
"``config.yaml`` 으로 주어집니다. option으로 configure file명을 지정하지 않으면 config.json을"
" default로 찾습니다."
msgstr ""
"All examples, including mnist example, ``config.json`` or ``config.yaml`` is given as "
"configuration file. If you do not specify the configure file name as an "
"option, agent search file named config.json as default."

#: ../../contents/automl/start_automl.rst:24
msgid "Prepare source code files"
msgstr ""

#: ../../contents/automl/start_automl.rst:26
msgid "소스 코드 상에서 알아두어야 할 사항에 대해 설명하겠습니다. 우선 AutoML을 사용하고 싶으시면 이 파트는 건너뛰시기 바랍니다."
msgstr ""
"We will talk about what you need to know in the source code. If you want "
"to use AutoML first, please skip this part."

#: ../../contents/automl/start_automl.rst:43
msgid "hyperparameter 연결하기"
msgstr "Connecting hyperparameter"

#: ../../contents/automl/start_automl.rst:30
msgid ""
"learning rate(lr)를 사용하고 싶다고 가정해봅시다. configuration file에 정의한 내용이 source "
"code에서 어떻게 사용될까요? argument로 전달하면 됩니다. 이번 예제의 configuration file에서 lr은 다음과"
" 같이 정의되어 있습니다."
msgstr ""
"Let's say you want to use learning rate(lr). How will hyperparameters "
"defined in the configuration file be used in the source code? You can "
"pass it as an argument. In the example configuration file, lr is defined "
"as below "

#: ../../contents/automl/start_automl.rst:38
msgid ""
"그럼 main.py 파일에서는 다음과 같이 configuration 파일에서 정의한 hyperparameter 이름과 데이터 형식,"
" 기본값을 parser.add_argument() 함수에 넣어서 활용할 수 있습니다."
msgstr ""
"In main.py file, you can use hyperparameter name, data type, and default "
"value defined in configuration file by putting it in "
"parser.add_argument() function as follows."

#: ../../contents/automl/start_automl.rst:48
msgid "nsml.report() function"
msgstr ""

#: ../../contents/automl/start_automl.rst:46
msgid ""
"소스코드 파일에 있는 :ref:`nsml.report()<nsml.report()>` 함수에선 __라는 기호가 자주 등장합니다. 이"
" __은 NSML 시스템 상에서 /으로 자동으로 바뀝니다. 따라서 소스 예제에서의 __와 configuration file과 "
"web에 나오는 /을 동일한 것이라 할 수 있습니다."
msgstr ""
"The __ symbol often appears in :ref:`nsml.report()<nsml.report()>` "
"function in the source code file. This will be automatically changed to /"
" on NSML system. So, you can say that __ in the source example and / in "
"configuration file and web are the same."

#: ../../contents/automl/start_automl.rst:48
msgid ""
"예를 들어 measure에 있는 test/accuracy와 nsml.report()의 test__accuracy는 같다고 보시면 "
"됩니다."
msgstr ""
"For example, test/accuracy in measure and test__accuracy in nsml.report()"
" are the same. "

#: ../../contents/automl/start_automl.rst:116
msgid "measure을 AutoML에 인식시키기"
msgstr "Connecting measure to AutoML"

#: ../../contents/automl/start_automl.rst:51
msgid "measure을 AutoML 안에서 계속 기록하게 하려면 다음과 같은 3가지 소스를 꼭 넣으셔야 합니다."
msgstr ""
"To have measure recorded in AutoML, you must add the following three "
"sources:"

#: ../../contents/automl/start_automl.rst:69
msgid ""
"bind 함수, report 함수, save 함수는 NSML library 문서에서 다룹니다. 자세한 사항은 다음 링크를 확인하시기"
" 바랍니다."
msgstr ""
"Bind function, report function, and save function are covered in the NSML"
" library document. sFor more information, please check out the following "
"link."

#: ../../contents/automl/start_automl.rst:73
msgid ":ref:`nsml.bind<nsml.bind()>`"
msgstr ""

#: ../../contents/automl/start_automl.rst:73
msgid ":ref:`nsml.report<nsml.report()>`"
msgstr ""

#: ../../contents/automl/start_automl.rst:73
msgid ":ref:`nsml.save<nsml.save()>`"
msgstr ""

#: ../../contents/automl/start_automl.rst:76
msgid ""
"위의 매 epoch마다 nsml.save(epoch)와 같은 방식으로 model을 저장하면, 추후에 storage 용량을 많이 "
"사용하기 쉽습니다. 따라서 하나의 nsml session에 하나의 모델을 저장하고, 이후에 높은 objective metric을 "
"갱신한 모델이 발생한 경우에 이전의 모델을 덮어씌우는 방법을 권장합니다."
msgstr ""
"Storing the model in the same way as in nsml.save(epoch) for every epoch "
"makes it easy to use a lot of storage capacity later on. Therefore, it is"
" recommended to store one model in one nsml session and overwrite the "
"previous model in the event of a model that subsequently renews a high "
"objective metric. "

#: ../../contents/automl/start_automl.rst:78
msgid ""
"모델을 덮어씌우기 위한 예시는 아래와 같습니다. `06.AutoML/01_automl_mnist/main.py`_ 예제와 비교해서 "
"달라진 마지막 줄을 참고하시기 바랍니다."
msgstr ""
"An example of overwriting a model is shown below. Please refer to the "
"last line changed compared to the example "
"`06.AutoML/01_automl_mnist/main.py`_ ."

#: ../../contents/automl/start_automl.rst:119
msgid "args가 전달되는 명령어"
msgstr "Command that passes args"

#: ../../contents/automl/start_automl.rst:119
msgid ""
":ref:`nsml run<nsml run>` 명령에 args들이 전달됩니다. configuration file에 'args'라는 "
"키 이름으로 args를 전달하셔도 됩니다."
msgstr ""
"Args are passed to :ref:`nsml run<nsml run>` command. You can also put "
"args in key, 'args' in configuration file. "

#: ../../contents/automl/start_automl.rst:124
msgid "Run AutoML"
msgstr ""

#: ../../contents/automl/start_automl.rst:126
msgid "AutoML session을 시작해보겠습니다. 01_automl_mnist 폴더 위치로 이동한 후, 아래의 명령를 입력합니다."
msgstr ""
"Let's start AutoML session. Go to the location of the 01_automl_mnist "
"folder, and type the following command:"

#: ../../contents/automl/start_automl.rst:148
msgid "Stop AutoML"
msgstr ""

#: ../../contents/automl/start_automl.rst:150
msgid "AutoML session을 멈출 수 있습니다."
msgstr "AutoML session can be stopped."

#~ msgid "AutoML 시작하기"
#~ msgstr ""

#~ msgid ""
#~ "mnist 예제를 비롯한 모든 예제에서는 configuration "
#~ "file이 ```config.py``` 으로 주어집니다. option으로 "
#~ "configure file명을 지정하지 않으면 config.py 파일을"
#~ " default로 찾습니다."
#~ msgstr ""

#~ msgid ""
#~ "mnist 예제를 비롯한 모든 예제에서는 configuration "
#~ "file이 ``config.py`` 으로 주어집니다. option으로 "
#~ "configure file명을 지정하지 않으면 config.py 파일을"
#~ " default로 찾습니다."
#~ msgstr ""

