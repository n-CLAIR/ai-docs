# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, NAVER
# This file is distributed under the same license as the NSML package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
msgid ""
msgstr ""
"Project-Id-Version: NSML \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-08-01 09:39+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../contents/session/prepare_a_session_environment.rst:4
msgid "Prepare a session environment"
msgstr ""

#: ../../contents/session/prepare_a_session_environment.rst:6
msgid "session을 실행하기 전, 아래와 같은 방법으로 NSML server에서 실행될 code의 실행 환경을 설정해야 합니다."
msgstr ""
"Before running session, you need to set the execution environment of code"
" as below."

#: ../../contents/session/prepare_a_session_environment.rst:24
msgid "pip로 install이 가능한 경우"
msgstr "If you can install with pip"

#: ../../contents/session/prepare_a_session_environment.rst:9
msgid "setup.py 혹은 requirements.txt 파일에 아래와 같이 python library 를 기입합니다."
msgstr "Write the python library in setup.py or requirements.txt as shown below."

#: ../../contents/session/prepare_a_session_environment.rst:61
msgid "pip로 install이 불가능한 경우"
msgstr "If you can not install with pip"

#: ../../contents/session/prepare_a_session_environment.rst:27
msgid ""
"docker로 실행 환경을 설정할 수 있습니다. setup.py 혹은 requirements.txt 상단에 ``'#nsml:'`` "
"를 붙여서 도커 image 이름을 적어주면 됩니다."
msgstr ""
"You can set the execution environment by setting the docker environment. "
"You can write the name of the image of the docker by attaching "
"``'#nsml:'`` to the top of setup.py or requirements.txt."

#: ../../contents/session/prepare_a_session_environment.rst:29
msgid "``setup.py``"
msgstr ""

#: ../../contents/session/prepare_a_session_environment.rst:46
msgid "``requirements.txt``"
msgstr ""

#: ../../contents/session/prepare_a_session_environment.rst:57
msgid ""
"만약 setup.py 와 requirements.txt가 둘 다 있으 setup.py 를 먼저 설치하고, "
"requirements.txt 를 설치합니다."
msgstr ""
"If you have both setup.py and requirements.txt, install setup.py first "
"and install requirements.txt."

#: ../../contents/session/prepare_a_session_environment.rst:61
msgid ""
"docker 환경을 기재하지 않으면 `nsml/default_ml:latest`_ 를 사용합니다. (latest 버전은 계속 바뀔 "
"수 있습니다.)"
msgstr ""
"If you do not list the docker environment, use `nsml/default_ml:latest`_."
" (latest version may change. )"

#: ../../contents/session/prepare_a_session_environment.rst:77
msgid "``apt-get`` 으로 패키지를 설치해야 할 필요가 있을 경우"
msgstr "If you need to install a package with ``apt-get``"

#: ../../contents/session/prepare_a_session_environment.rst:64
msgid "``nsml_package.txt`` 파일을 만들어서 필요한 라이브러리를 기재하면 설치됩니다."
msgstr ""
"If you create a ``nsml_package.txt`` file and specify the required "
"library, it will be installed."

#: ../../contents/session/prepare_a_session_environment.rst:66
msgid "``nsml_package.txt``"
msgstr ""

#: ../../contents/session/prepare_a_session_environment.rst:75
msgid ""
"apt-get -y update && apt-get -y install [package] 로 설치됩니다. 그 외에 설치하는데 더 "
"많은 명령어가 필요한 경우, docker 환경을 새로 구성하시는 걸 추천합니다."
msgstr ""
"Installed as apt-get -y update && apt-get -y install [package]. If you "
"need more commands to install it, we recommend that you configure a new "
"docker environment."

#: ../../contents/session/prepare_a_session_environment.rst:83
msgid "NSML ignore"
msgstr ""

#: ../../contents/session/prepare_a_session_environment.rst:85
msgid ""
":ref:`nsml run<nsml run>` 으로 session을 실행시킬 때 필요 없는 파일들도 함께 올라가면서 시간이 오래 "
"걸릴 수 있습니다. session 실행과 관계 없는 파일 목록을 ``.gitignore`` 와 같은 형식으로 "
"``.nsmlignore`` 에 기재하면, 필요 없는 파일이 올라가는 것을 막을 수 있습니다."
msgstr ""
"When you run session with :ref:`nsml run<nsml run>` , the files that you "
"do not need will be also uploaded and take a long time. If you list files"
" that is not related to session execution in ``.nsmlignore``  such as "
"session ``.gitignore`` format, you can prevent unneeded files from "
"uploading."

#: ../../contents/session/prepare_a_session_environment.rst:88
msgid "``.nsmlignore``"
msgstr ""

#~ msgid ""
#~ "docker 환경을 기재하지않으면 `nsml/default_ml:latest`_ 를"
#~ " 사용합니다. (latest라서 버전이 바뀔수도있습니다.)"
#~ msgstr ""

#~ msgid ""
#~ "apt-get -y update && apt-get "
#~ "-y install [package] 로 설치됩니다. 그 외에"
#~ " 설치하는데 더 많은 명령어가 필요한 경우, docker"
#~ " 환경을 새로 구성하시는걸 추천합니다"
#~ msgstr ""

#~ msgid ""
#~ "name space 를 요청합니다 "
#~ "https://oss.navercorp.com/shipdock/artifactory_request_permission/issues/new"
#~ msgstr ""

#~ msgid "(사내용)internal registry 에 docker image 를 push 하는방법"
#~ msgstr "How to push docker image to internal registry(Contents for our company)"

#~ msgid ""
#~ "name space 를 요청합니다. "
#~ "https://oss.navercorp.com/shipdock/artifactory_request_permission/issues/new"
#~ msgstr ""
#~ "Request a name space "
#~ "https://oss.navercorp.com/shipdock/artifactory_request_permission/issues/new"

#~ msgid ""
#~ "생성된 namespace에 docker image 를 push "
#~ "합니다. https://oss.navercorp.com/shipdock/artifactory_issue/wiki"
#~ "/Quick-Guide"
#~ msgstr ""
#~ "Push the docker image onto the "
#~ "generated namespace. "
#~ "https://oss.navercorp.com/shipdock/artifactory_issue/wiki/Quick-"
#~ "Guide "

#~ msgid ""
#~ "권한 관리 시스템을 사용해서 Anonymous 에게 read"
#~ " 권한을 부여합니다. "
#~ "https://oss.navercorp.com/shipdock/artifactory_issue/wiki/%EA%B6%8C%ED%95%9C-%EA%B4%80%EB%A6%AC"
#~ msgstr ""
#~ "Use the authority management system to"
#~ " assign read permissions to Anonymous. "
#~ "https://oss.navercorp.com/shipdock/artifactory_issue/wiki/%EA%B6%8C%ED%95%9C-%EA%B4%80%EB%A6%AC"

#~ msgid ""
#~ "pip로 install이 불가능한 경우와 마찬가지로 setup.py"
#~ " 혹은 requirements.txt 상단에 docker image "
#~ "를 적어줍니다."
#~ msgstr ""
#~ "Like the case that can not install"
#~ " with pip, write a docker image "
#~ "at the top of setup.py or "
#~ "requirements.txt."

#~ msgid "Dockerfile build"
#~ msgstr ""

#~ msgid "``Dockerfile`` 을 빌드해서 이미지를 만들어 사용할 경우엔 몇가지 주의 사항이 있습니다."
#~ msgstr ""
#~ "There are a few caveats to be "
#~ "aware of when building and using "
#~ "``Dockerfile``"

#~ msgid "`VOLUME`_ 이나 `RUN`_ 으로 `/data` , `/nfs` , `/app` 이라는 폴더를 만들면 안됩니다."
#~ msgstr "Don't make folder `/data` , `/nfs` , `/app` using `VOLUME`_ or `RUN`_ "

#~ msgid "python과 pip가 설치되어 있어야 합니다."
#~ msgstr "Python and pip must be installed"

